// Code generated by oto; DO NOT EDIT.

'use strict';

 
export class BinService {
	
		
	async find(findRequest) {
		const headers = {
			'Accept': 'application/json',
			'Content-Type': 'application/json',
		}
		findRequest = findRequest || {}
		const response = await fetch('/api/BinService.Find', {
			method: 'POST',
			headers: headers,
			body: JSON.stringify(findRequest)
		})

		return response.json().then(
            json => {
                if (json.error) {
                    throw new Error(`BinService.Find: ${json.error}`)
                }
                return json
            },
            (error) => {
				console.error(error)
                throw new Error(`BinService.Find: unexpected error`)
            }
        )
	}
	
		
	async paste(pasteRequest) {
		const headers = {
			'Accept': 'application/json',
			'Content-Type': 'application/json',
		}
		pasteRequest = pasteRequest || {}
		const response = await fetch('/api/BinService.Paste', {
			method: 'POST',
			headers: headers,
			body: JSON.stringify(pasteRequest)
		})

		return response.json().then(
            json => {
                if (json.error) {
                    throw new Error(`BinService.Paste: ${json.error}`)
                }
                return json
            },
            (error) => {
				console.error(error)
                throw new Error(`BinService.Paste: unexpected error`)
            }
        )
	}
	
		
	async submitPassword(submitPasswordRequest) {
		const headers = {
			'Accept': 'application/json',
			'Content-Type': 'application/json',
		}
		submitPasswordRequest = submitPasswordRequest || {}
		const response = await fetch('/api/BinService.SubmitPassword', {
			method: 'POST',
			headers: headers,
			body: JSON.stringify(submitPasswordRequest)
		})

		return response.json().then(
            json => {
                if (json.error) {
                    throw new Error(`BinService.SubmitPassword: ${json.error}`)
                }
                return json
            },
            (error) => {
				console.error(error)
                throw new Error(`BinService.SubmitPassword: unexpected error`)
            }
        )
	}
	
}

