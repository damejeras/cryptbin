// Code generated by oto; DO NOT EDIT.

'use strict';

export class BinService {
	async find(findRequest) {
		const headers = {
			'Accept': 'application/json',
			'Content-Type': 'application/json',
		}

		const response = await fetch('/api/v1/BinService/Find', {
			method: 'POST',
			headers: headers,
			body: JSON.stringify(findRequest)
		})

		const responseJson = await response.json()

		if (response.status == 200) {
			return responseJson
		}

		throw new Error(`BinService/Find: ${responseJson.message}`)
	}

	async paste(pasteRequest) {
		const headers = {
			'Accept': 'application/json',
			'Content-Type': 'application/json',
		}

		const response = await fetch('/api/v1/BinService/Paste', {
			method: 'POST',
			headers: headers,
			body: JSON.stringify(pasteRequest)
		})

		const responseJson = await response.json()

		if (response.status == 200) {
			return responseJson
		}

		throw new Error(`BinService/Paste: ${responseJson.message}`)
	}

	async submitPassword(submitPasswordRequest) {
		const headers = {
			'Accept': 'application/json',
			'Content-Type': 'application/json',
		}
		submitPasswordRequest = submitPasswordRequest || {}
		const response = await fetch('/api/v1/BinService/SubmitPassword', {
			method: 'POST',
			headers: headers,
			body: JSON.stringify(submitPasswordRequest)
		})

		const responseJson = await response.json()

		if (response.status == 200) {
			return responseJson
		}

		throw new Error(`BinService/SubmitPassword: ${responseJson.message}`)
	}
}

